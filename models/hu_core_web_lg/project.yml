title: "NerKor model"
description: "Large model built on the NerKor corpus"

# Variables can be referenced across the project.yml using ${vars.var_name}

vars:
  config: "default"
  lang: "hu"
  treebank: "UD_Hungarian-Szeged"
  nerkor: "NerKor"
  hunnerwiki: "hunNERwiki"
  szegedner: "SzegedNER"
  ner_merged: "ner_merged"
  ud_train_name: "hu_szeged-ud-train"
  ud_dev_name: "hu_szeged-ud-dev"
  ud_test_name: "hu_szeged-ud-test"
  package_name: "hu_core_web_lg"
  package_version: "0.1.0"
  gpu: -1
  corpus: ${vars.ner_merged}

# These are the directories that the project needs. The project CLI will make
# sure that they always exist.

directories: ["assets", "corpus", "training", "metrics", "configs", "packages"]

assets:
  # Universal dependencies
  - dest: "assets/${vars.treebank}"
    git:
      repo: https://github.com/UniversalDependencies/${vars.treebank}
      branch: master
      path: ""

  # NerKor
  - dest: "assets/${vars.nerkor}"
    git:
      repo: https://github.com/nytud/NYTK-NerKor
#      repo: https://github.com/oroszgy/NYTK-NerKor
      branch: main
#      branch: patch-1
      path: data

  # hunNERwiki
  - dest: "assets/${vars.hunnerwiki}/huwiki.1.ner.tsv.gz"
    url: http://hlt.sztaki.hu/resources/hunnerwiki/huwiki.1.ner.tsv.gz
  - dest: "assets/${vars.hunnerwiki}/huwiki.2.ner.tsv.gz"
    url: http://hlt.sztaki.hu/resources/hunnerwiki/huwiki.2.ner.tsv.gz
  - dest: "assets/${vars.hunnerwiki}/huwiki.3.ner.tsv.gz"
    url: http://hlt.sztaki.hu/resources/hunnerwiki/huwiki.3.ner.tsv.gz
  - dest: "assets/${vars.hunnerwiki}/huwiki.4.ner.tsv.gz"
    url: http://hlt.sztaki.hu/resources/hunnerwiki/huwiki.4.ner.tsv.gz
  
  # SzegedNER
  - dest: "assets/${vars.szegedner}/business_NER.zip"
    url: http://www.inf.u-szeged.hu/~szantozs/download/ner/business_NER.zip
  - dest: "assets/${vars.szegedner}/criminal_NER.zip"
    url: http://www.inf.u-szeged.hu/~szantozs/download/ner/criminal_NER.zip
    
  # Word embeddings
  - dest: "assets/vectors/webcorpuswiki.word2vec.bz2"
    url: https://github.com/oroszgy/hunlp-resources/releases/download/webcorpuswiki_word2vec_v0.1/webcorpuswiki.word2vec.bz2

workflows:
  all:
    - vectors
    - preprocess_ud
    - preprocess_nerkor
    - preprocess_hunnerwiki
    - preprocess_szegedner
    - preprocess_merge
    - train
    - evaluate
    - package

commands:
  - name: vectors
    help: "Convert vectors"
    script:
      - bash -c 'bzcat assets/vectors/webcorpuswiki.word2vec.bz2 > assets/vectors/webcorpuswiki.word2vec.txt'
      - python -m spacy init vectors hu assets/vectors/webcorpuswiki.word2vec.txt assets/vectors/webcorpuswiki.word2vec.vec
    deps:
      - assets/vectors/webcorpuswiki.word2vec.bz2
    outputs:
      - assets/vectors/webcorpuswiki.word2vec.vec

  - name: preprocess_ud
    help: "Convert the Universal Dependencies data to spaCy's format"
    script:
      - mkdir -p corpus/${vars.treebank}
      - python -m spacy convert assets/${vars.treebank}/${vars.ud_train_name}.conllu corpus/${vars.treebank}/ --converter conllu --n-sents 10 --merge-subtokens
      - python -m spacy convert assets/${vars.treebank}/${vars.ud_dev_name}.conllu corpus/${vars.treebank}/ --converter conllu --n-sents 10 --merge-subtokens
      - python -m spacy convert assets/${vars.treebank}/${vars.ud_test_name}.conllu corpus/${vars.treebank}/ --converter conllu --n-sents 10 --merge-subtokens

      - mv corpus/${vars.treebank}/${vars.ud_train_name}.spacy corpus/${vars.treebank}/train.spacy
      - mv corpus/${vars.treebank}/${vars.ud_dev_name}.spacy corpus/${vars.treebank}/dev.spacy
      - mv corpus/${vars.treebank}/${vars.ud_test_name}.spacy corpus/${vars.treebank}/test.spacy
          
    deps:
      - assets/${vars.treebank}/${vars.ud_train_name}.conllu
      - assets/${vars.treebank}/${vars.ud_dev_name}.conllu
      - assets/${vars.treebank}/${vars.ud_test_name}.conllu
    outputs:
      - corpus/${vars.treebank}/train.spacy
      - corpus/${vars.treebank}/dev.spacy
      - corpus/${vars.treebank}/test.spacy

  - name: preprocess_nerkor
    help: "Convert the NerKor data to spaCy's format"
    script:
      - mkdir -p corpus/${vars.nerkor}
      - 'python ../../huspacy/cli/convert2conllu.py ./assets/${vars.nerkor}/train-devel-test/devel/*/morph/*.conllup  assets/${vars.nerkor}/devel.conllup'
      - 'python ../../huspacy/cli/convert2conllu.py ./assets/${vars.nerkor}/train-devel-test/train/*/morph/*.conllup  assets/${vars.nerkor}/train.conllup'
      - 'python ../../huspacy/cli/convert2conllu.py ./assets/${vars.nerkor}/train-devel-test/test/*/morph/*.conllup  assets/${vars.nerkor}/test.conllup'
      
      - '../../huspacy/cli/scripts/convert_nerkor2iob.sh ./assets/${vars.nerkor}/train-devel-test/devel/*/*/*.conllup  assets/${vars.nerkor}/devel.iob'
      - '../../huspacy/cli/scripts/convert_nerkor2iob.sh ./assets/${vars.nerkor}/train-devel-test/train/*/*/*.conllup  assets/${vars.nerkor}/train.iob'
      - '../../huspacy/cli/scripts/convert_nerkor2iob.sh ./assets/${vars.nerkor}/train-devel-test/test/*/*/*.conllup  assets/${vars.nerkor}/test.iob'
      
      - python -m spacy convert assets/${vars.nerkor}/devel.iob corpus/${vars.nerkor}/ --converter iob --n-sents 10
      - python -m spacy convert assets/${vars.nerkor}/train.iob corpus/${vars.nerkor}/ --converter iob --n-sents 10
      - python -m spacy convert assets/${vars.nerkor}/test.iob corpus/${vars.nerkor}/ --converter iob --n-sents 10
          
    deps:
      - assets/${vars.nerkor}/
    outputs:
      - corpus/${vars.nerkor}/train.spacy
      - corpus/${vars.nerkor}/devel.spacy
      - corpus/${vars.nerkor}/test.spacy

  - name: preprocess_hunnerwiki
    help: "Convert the hunNERwiki data to spaCy's format"
    script:
      - mkdir -p corpus/${vars.hunnerwiki}
      - '../../huspacy/cli/scripts/convert_hunerwiki2conll.sh ./assets/${vars.hunnerwiki}/huwiki.[12].ner.tsv.gz  assets/${vars.hunnerwiki}/train.iob'
      - '../../huspacy/cli/scripts/convert_hunerwiki2conll.sh ./assets/${vars.hunnerwiki}/huwiki.3.ner.tsv.gz  assets/${vars.hunnerwiki}/devel.iob'
      - '../../huspacy/cli/scripts/convert_hunerwiki2conll.sh ./assets/${vars.hunnerwiki}/huwiki.4.ner.tsv.gz  assets/${vars.hunnerwiki}/test.iob'      

      - python -m spacy convert assets/${vars.hunnerwiki}/devel.iob corpus/${vars.hunnerwiki}/ --converter iob --n-sents 10
      - python -m spacy convert assets/${vars.hunnerwiki}/train.iob corpus/${vars.hunnerwiki}/ --converter iob --n-sents 10
      - python -m spacy convert assets/${vars.hunnerwiki}/test.iob corpus/${vars.hunnerwiki}/ --converter iob --n-sents 10
          
    deps:
      - assets/${vars.hunnerwiki}/huwiki.1.ner.tsv.gz
      - assets/${vars.hunnerwiki}/huwiki.2.ner.tsv.gz
      - assets/${vars.hunnerwiki}/huwiki.3.ner.tsv.gz
      - assets/${vars.hunnerwiki}/huwiki.4.ner.tsv.gz
    outputs:
      - corpus/${vars.hunnerwiki}/train.spacy
      - corpus/${vars.hunnerwiki}/devel.spacy
      - corpus/${vars.hunnerwiki}/test.spacy

  - name: preprocess_szegedner
    help: "Convert the SzegedNER data to spaCy's format"
    script:
      - mkdir -p corpus/${vars.szegedner}
      - unzip -o assets/${vars.szegedner}/business_NER.zip -d assets/${vars.szegedner}/
      - bash -c 'iconv -f iso-8859-2 --t utf8 assets/${vars.szegedner}/hun_ner_corpus.txt | tail -n +2 | sed -e "s/\t0/\tO/g" > assets/${vars.szegedner}/hun_business_ner_corpus_utf8.txt'
      
      - unzip -o assets/${vars.szegedner}/criminal_NER.zip -d assets/${vars.szegedner}/
      - bash -c 'iconv -f iso-8859-2 --t utf8 assets/${vars.szegedner}/hvg | tail -n +3 | sed -e "s/\t0/\tO/g" > assets/${vars.szegedner}/hun_criminal_ner_corpus_utf8.txt'
      
      - python ../../huspacy/cli/split_szeged_ner.py assets/${vars.szegedner}/hun_business_ner_corpus_utf8.txt assets/${vars.szegedner}/hun_business_train.iob1 assets/${vars.szegedner}/hun_business_devel.iob1 assets/${vars.szegedner}/hun_business_test.iob1
      - python ../../huspacy/cli/split_szeged_ner.py assets/${vars.szegedner}/hun_criminal_ner_corpus_utf8.txt assets/${vars.szegedner}/hun_criminal_train.iob1 assets/${vars.szegedner}/hun_criminal_devel.iob1 assets/${vars.szegedner}/hun_criminal_test.iob1
      
      - bash -c 'cat assets/${vars.szegedner}/hun_*_train.iob1 > assets/${vars.szegedner}/train.iob1'
      - bash -c 'cat assets/${vars.szegedner}/hun_*_devel.iob1 > assets/${vars.szegedner}/devel.iob1'
      - bash -c 'cat assets/${vars.szegedner}/hun_*_test.iob1 > assets/${vars.szegedner}/test.iob1'
      
      - '../../huspacy/cli/scripts/convert_iob1_2_iob2.sh assets/${vars.szegedner}/train.iob1 assets/${vars.szegedner}/train.iob'
      - '../../huspacy/cli/scripts/convert_iob1_2_iob2.sh assets/${vars.szegedner}/devel.iob1 assets/${vars.szegedner}/devel.iob'
      - '../../huspacy/cli/scripts/convert_iob1_2_iob2.sh assets/${vars.szegedner}/test.iob1 assets/${vars.szegedner}/test.iob'
      
      - python -m spacy convert assets/${vars.szegedner}/devel.iob corpus/${vars.szegedner}/ --converter iob --n-sents 10
      - python -m spacy convert assets/${vars.szegedner}/train.iob corpus/${vars.szegedner}/ --converter iob --n-sents 10
      - python -m spacy convert assets/${vars.szegedner}/test.iob corpus/${vars.szegedner}/ --converter iob --n-sents 10
    
    deps:
      - assets/${vars.szegedner}/business_NER.zip
      - assets/${vars.szegedner}/criminal_NER.zip
    outputs:
      - corpus/${vars.szegedner}/train.spacy
      - corpus/${vars.szegedner}/devel.spacy
      - corpus/${vars.szegedner}/test.spacy
      
  - name: preprocess_merge
    help: "Cancatenate IOB datasets to a new dataset"
    script:
      - mkdir -p assets/${vars.ner_merged}
      - mkdir -p corpus/${vars.ner_merged}

      - bash -c 'cat assets/${vars.szegedner}/train.iob assets/${vars.hunnerwiki}/train.iob assets/${vars.hunnerwiki}/test.iob assets/${vars.hunnerwiki}/devel.iob assets/${vars.nerkor}/train.iob assets/${vars.nerkor}/test.iob assets/${vars.nerkor}/devel.iob > assets/${vars.ner_merged}/train.iob'
      - bash -c 'cp assets/${vars.szegedner}/devel.iob assets/${vars.ner_merged}/devel.iob'
      - bash -c 'cp assets/${vars.szegedner}/test.iob assets/${vars.ner_merged}/test.iob'
      
      - python -m spacy convert assets/${vars.ner_merged}/devel.iob corpus/${vars.ner_merged}/ --converter iob --n-sents 10
      - python -m spacy convert assets/${vars.ner_merged}/train.iob corpus/${vars.ner_merged}/ --converter iob --n-sents 10
      - python -m spacy convert assets/${vars.ner_merged}/test.iob corpus/${vars.ner_merged}/ --converter iob --n-sents 10
    
    deps:
      - assets/${vars.szegedner}/train.iob
      - assets/${vars.hunnerwiki}/train.iob
      - assets/${vars.hunnerwiki}/test.iob
      - assets/${vars.hunnerwiki}/devel.iob
      - assets/${vars.nerkor}/train.iob
      - assets/${vars.nerkor}/test.iob
      - assets/${vars.nerkor}/devel.iob
      - assets/${vars.szegedner}/devel.iob
      - assets/${vars.szegedner}/test.iob
      
    outputs:
      - corpus/${vars.ner_merged}/train.spacy
      - corpus/${vars.ner_merged}/devel.spacy
      - corpus/${vars.ner_merged}/test.spacy

  - name: train
    help: "Train ${vars.treebank}"
    script:
      - >-
        python -m spacy train configs/${vars.config}.cfg --output training/${vars.corpus}
          --nlp.lang=${vars.lang} --gpu-id ${vars.gpu}
          --paths.train corpus/${vars.corpus}/train.spacy --paths.dev corpus/${vars.corpus}/devel.spacy
    deps:
      - corpus/${vars.corpus}/train.spacy
      - corpus/${vars.corpus}/devel.spacy
      - configs/${vars.config}.cfg
    outputs:
      - training/${vars.corpus}/model-best

  - name: evaluate
    help: "Evaluate on the test data and save the metrics"
    script:
      - python -m spacy evaluate ./training/${vars.treebank}/model-best ./corpus/${vars.treebank}/test.spacy --output ./metrics/${vars.treebank}.json --gpu-id ${vars.gpu} -G
    deps:
      - training/${vars.treebank}/model-best
      - corpus/${vars.treebank}/test.spacy
    outputs:
      - metrics/${vars.treebank}.json

  - name: package
    help: "Package the trained model so it can be installed"
    script:
      - python -m spacy package training/${vars.treebank}/model-best packages --name ${vars.package_name} --version ${vars.package_version} --force
    deps:
      - training/${vars.treebank}/model-best
    outputs_no_cache:
      - packages/${vars.lang}_${vars.package_name}-${vars.package_version}/dist/en_${vars.package_name}-${vars.package_version}.tar.gz

  - name: clean
    help: "Remove intermediate files"
    script:
      - rm -rf training/*
      - rm -rf metrics/*
      - rm -rf corpus/*
